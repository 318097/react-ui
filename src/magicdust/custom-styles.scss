@import "./colors.scss";
@import "./constants.scss";

.reset {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.defaults {
  width: 100%;
  height: 100%;
  overflow: hidden;
  @extend .reset;
}

#react-ui,
.react-ui {
  .absolute {
    position: absolute;
  }

  .relative {
    position: relative;
  }

  .mt {
    margin-top: $VALUE;
  }

  .mr {
    margin-right: $VALUE;
  }

  .mb {
    margin-bottom: $VALUE;
  }

  .ml {
    margin-left: $VALUE;
  }

  .pt {
    padding-top: $VALUE;
  }

  .pr {
    padding-right: $VALUE;
  }

  .pb {
    padding-bottom: $VALUE;
  }

  .pl {
    padding-left: $VALUE;
  }

  .gap {
    gap: $VALUE;
  }

  @each $item, $VALUE in $VALUE_LIST {
    .m-#{$item} {
      margin: $VALUE;
    }

    .mt-#{$item} {
      margin-top: $VALUE;
    }

    .mr-#{$item} {
      margin-right: $VALUE;
    }

    .mb-#{$item} {
      margin-bottom: $VALUE;
    }

    .ml-#{$item} {
      margin-left: $VALUE;
    }

    .p-#{$item} {
      padding: $VALUE;
    }

    .pt-#{$item} {
      padding-top: $VALUE;
    }

    .pr-#{$item} {
      padding-right: $VALUE;
    }

    .pb-#{$item} {
      padding-bottom: $VALUE;
    }

    .pl-#{$item} {
      padding-left: $VALUE;
    }

    .gap-#{$item} {
      gap: $VALUE;
    }
  }

  .w-100 {
    width: 100%;
  }

  .text-center {
    text-align: center;
  }

  .disabled {
    cursor: not-allowed;
    & * {
      cursor: not-allowed;
    }
  }

  .center-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .underline {
    position: relative;
    &:after {
      content: "";
      width: 105%;
      height: 6px;
      background: rgba($green, 0.5);
      position: absolute;
      bottom: -1px;
      left: 0;
    }
  }

  .pointer {
    cursor: pointer;
  }

  .flex {
    display: flex;
  }

  .flex.wrap {
    flex-wrap: wrap;
  }

  .flex.center,
  .flex.row.center {
    align-items: center;
  }

  .flex.column {
    flex-direction: column;
  }

  .flex.column.center {
    justify-content: center;
  }

  .flex.space-between {
    justify-content: space-between;
  }

  .flex.space-around {
    justify-content: space-around;
  }

  .fcc {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .fc {
    display: flex;
    align-items: center;
  }

  /* CARD */

  .curve-border-1 {
    // border-radius: 3% 97% 5% 95% / 95% 4% 96% 5%;
    border-radius: 1% 98% 2% 98% / 94% 7% 94% 3%;
  }

  .curve-border-2 {
    border-radius: 48% 46% 1% 53% / 2% 2% 42% 2%;
  }

  .curve-border-3 {
    border-radius: 48% 6% 1% 4% / 2% 7% 18% 5%;
  }

  .bottom-line {
    &:after {
      content: "";
      position: absolute;
      bottom: 0px;
      left: 0;
      width: 100%;
      height: 4px;
      background: $strokeTwo;
    }
  }

  .divider {
    width: 100%;
    height: 1px;
    background: $strokeOne;
    margin: 8px 0;
  }

  .dot {
    width: 8px;
    height: 8px;
    background: $green;
    border-radius: 50%;
    display: inline-block;
  }

  .icon.icon-bg {
    padding: 6px;
    border-radius: 0;
    transition: 0.4s;
    &:hover {
      background: $strokeOne;
      border-radius: 50%;
    }
  }

  .db {
    border: 4px solid $steel;
    box-shadow: 4px 4px $lead;
  }

  .space-kids {
    & > * {
      margin-right: $VALUE;
      &:last-child {
        margin-right: 0;
      }
    }
  }

  .link {
    text-decoration: none;
    transition: 0.2s;
    cursor: pointer;
    &:hover {
      color: $blue;
    }
  }

  .dot-loader {
    animation: 2s spin linear infinite;
    width: 20px;
    height: 20px;
    background: $blue;
    transform: rotate(0deg);
    border-radius: 50%;
    z-index: 10;
  }

  .text-overflow {
    width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: pre;
  }

  @keyframes spin {
    0% {
      background: $blue;
      transform: rotate(0deg);
      border-radius: 50%;
    }
    25% {
      background: $yellow;
    }
    50% {
      background: $nbOrange;
      border-radius: 44%;
    }
    75% {
      background: $green;
    }
    100% {
      background: $purple;
      transform: rotate(360deg);
      border-radius: 50%;
    }
  }

  .default-loader {
    width: 40px;
    height: 40px;
    background-color: $bar;
    border-radius: 100%;
    -webkit-animation: sk-scaleout 1s infinite ease-in-out;
    animation: sk-scaleout 1s infinite ease-in-out;
  }

  @-webkit-keyframes sk-scaleout {
    0% {
      -webkit-transform: scale(0);
    }
    100% {
      -webkit-transform: scale(1);
      opacity: 0;
    }
  }

  @keyframes sk-scaleout {
    0% {
      -webkit-transform: scale(0);
      transform: scale(0);
    }
    100% {
      -webkit-transform: scale(1);
      transform: scale(1);
      opacity: 0;
    }
  }

  .blur {
    backdrop-filter: blur(4px);
    background: rgba(255, 255, 255, 0.1);
  }

  .blur-bg {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    @extend .blur;
  }

  .text-overflow {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    display: inline-block; // text-overflow does not work for flex
    width: 100%;
  }

  /* WIP */
  .default-css {
    font-size: $FONT_SIZE;
    border-radius: $BORDER_RADIUS;
    transition: all 0.4s;
    box-sizing: border-box;
    font-family: inherit;
  }
  .flex-css {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-grow: 0;
    flex-shrink: 0;
  }
  .base-css {
    @extend .default-css;
    @extend .base-css;
    cursor: pointer;
    outline: none;
  }
  .size-sm {
    height: 22px;
  }
  .size-md {
    height: 28px;
  }
  .size-lg {
    height: 36px;
  }
  /* WIP - end */
}
